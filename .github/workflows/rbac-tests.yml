name: Extract Token and Nuclei Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rbac-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 17.x ]

    container:
      image: golang:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Nuclei
        id: cache-nuclei
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.HOME }}/.cache/go-build
            ${{ env.HOME }}/go/pkg/mod
          key: ${{ runner.os }}-nuclei-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-nuclei-

      - name: Install Nuclei
        if: steps.cache-nuclei.outputs.cache-hit != 'true'
        run: go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2

        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM application
        run: npm install

      - name: Start NPM application
        run: nohup npm start > /dev/null 2>&1 &

      - name: Wait for NPM server to be ready
        run: |
          until curl --output /dev/null -s --head http://127.0.0.1:3000; do
            sleep 1
          done

      - name: Extract JWTs
        run: |
          token_user=$(curl -s http://localhost:3000/api/login --data '{"username":"user1", "password":"password"}' -H "Content-Type: application/json")
          echo "TOKEN_USER=${{fromJson($token_user).token}}" >> $GITHUB_ENV
          
          token_admin=$(curl -s http://localhost:3000/api/login --data '{"username":"admin1", "password":"password"}' -H "Content-Type: application/json")
          echo "TOKEN_ADMIN=${{fromJson($token_admin).token}}" >> $GITHUB_ENV

      - name: Run Nuclei Tests
        run: |
          ./automated_tests/nuclei/scripts/run_tests.sh
